#!/usr/bin/env bash

DOTFILES_CHECK_FOLDER=$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)
LAST_CHECK_REGISTRY_FOLDER="$DOTFILES_CHECK_FOLDER/tmp/last_check"
DOTFILES=$(egrep -o '^[^#].*' "$DOTFILES_CHECK_FOLDER/config/dotfiles" )

check () {
  for_each_dotfile_in "$DOTFILES" |
             when_check_is_needed |
                 directory_exists |
           dont_has_local_changes |
           dont_has_local_commits |
                   update_dotfile

  register_last_check_for_all "$DOTFILES"
}

for_each_dotfile_in () {
  for dotfile in $1; do
    echo "${HOME}/${dotfile}"
  done
}

when_check_is_needed () {
  while read dotfile; do
    local last_check=$(last_check_registry_for "$dotfile")
    [ ! -e "$last_check" ] && echo "$dotfile"
  done
}

directory_exists () {
  while read dotfile; do
    [ ! -d "$dotfile" ] &&
      show_message "No dotfile found at $dotfile" ||
      echo "$dotfile"
  done
}

dont_has_local_changes () {
  while read dotfile; do
    local number_of_modified_files="$(cd "$dotfile" && git status --porcelain | wc -l)"

    [ "$number_of_modified_files" -gt 0 ] &&
      show_message "You have local changes at ${dotfile}" ||
      echo "$dotfile"
  done
}

dont_has_local_commits () {
  while read dotfile; do
    local number_of_local_commits=$(cd "$dotfile" && git log origin/master..master --oneline | wc -l)

    [ "$number_of_local_commits" -gt 0 ] &&
      show_message "You have commits not pushed to master at ${dotfile}" ||
      echo "$dotfile"
  done
}

update_dotfile () {
  while read dotfile; do
    has_remote_commits "$dotfile" &&
      confirm "You have remote changes at ${dotfile}. Do you want to pull them now?" &&
      (cd "$dotfile" && git pull > /dev/null)
  done
}

has_remote_commits () {
  local number_of_remote_commits=$(cd "$1"
    git remote update > /dev/null
    git log HEAD..origin/master --oneline | wc -l
  )

  [ "$number_of_remote_commits" -gt 0 ] && return 0
  return 1
}

register_last_check_for_all () {
  mkdir -p "$LAST_CHECK_REGISTRY_FOLDER"

  for_each_dotfile_in "$1" | while read dotfile; do
    touch "$(last_check_registry_for "$dotfile")"
  done

  remove_old_check_data
}

remove_old_check_data () {
  local today=$(date +"%m%d%y")
  find "$LAST_CHECK_REGISTRY_FOLDER" -type f -not -name "${today}*" -exec rm {} \;
}

last_check_registry_for () {
  local today=$(date +"%m%d%y")
  echo "${LAST_CHECK_REGISTRY_FOLDER}/${today}${1//\//_}"
}

show_message () {
  printf "%s... " "$1" 1>&2
  read -n 1 < /dev/tty
}

confirm () {
  printf "%s (y|N) " "$1" 1>&2
  read -n 1 answer < /dev/tty

  [ "$answer" != 'y' ] && return 1
  return 0
}

check
